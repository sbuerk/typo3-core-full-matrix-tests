name: "TYPO3 11.5"

on:
  push:

defaults:
  run:
    shell: bash

jobs:
  functional:
    name: "functional"
    runs-on: ubuntu-20.04
    strategy:
      # This prevents cancellation of matrix job runs, if one/two already failed and let the
      # rest matrix jobs be executed anyway.
      fail-fast: false
      matrix:
        coreBranch: [ '11.5' ]
        phpVersion: [ '7.4', '8.1 ']
        composerInstallType: ['composerInstall']
    steps:
      - name: Checkout github.com/typo3/typo3 on ${{ matrix.coreBranch }}
        uses: actions/checkout@v3
        with:
          repository: typo3/typo3
          ref: ${{ matrix.coreBranch }}
          token: ${{ secrets.GIT_CLONE_TOKEN }}
          path: ./core

      - name: Composer install
        run: Build/Scripts/runTests.sh -p ${{ matrix.phpVersion }} -s ${{ matrix.composerInstallType }}
        working-directory: ./core

      - name: Run tests -d mariadb -a mysqli -i 10.5
        run: Build/Scripts/runTests.sh -s functional -p ${{ matrix.phpVersion }} -d mariadb -a mysqli -i 10.5
        working-directory: ./core

      - name: Run tests -d mariadb -a mysqli -i 10.6
        run: Build/Scripts/runTests.sh -s functional -p ${{ matrix.phpVersion }} -d mariadb -a mysqli -i 10.6
        working-directory: ./core

      - name: Run tests -d mariadb -a mysqli -i 10.7
        run: Build/Scripts/runTests.sh -s functional -p ${{ matrix.phpVersion }} -d mariadb -a mysqli -i 10.7
        working-directory: ./core                

  acceptance:
    name: "acceptance"
    runs-on: ubuntu-20.04
    strategy:
      # This prevents cancellation of matrix job runs, if one/two already failed and let the
      # rest matrix jobs be executed anyway.
      fail-fast: false
      matrix:
        coreBranch: [ '11.5' ]
        phpVersion: [ '7.4', '8.1 ']
        composerInstallType: ['composerInstall']
    steps:
      - name: Checkout github.com/typo3/typo3 on ${{ matrix.coreBranch }}
        uses: actions/checkout@v3
        with:
          repository: typo3/typo3
          ref: ${{ matrix.coreBranch }}
          token: ${{ secrets.GIT_CLONE_TOKEN }}
          path: ./core

      - name: Composer install
        run: Build/Scripts/runTests.sh -p ${{ matrix.phpVersion }} -s ${{ matrix.composerInstallType }}
        working-directory: ./core

      - name: Run tests -d mariadb -a mysqli -i 10.6 -c 1/4
        run: Build/Scripts/runTests.sh -s acceptance -p ${{ matrix.phpVersion }} -d mariadb -a mysqli -i 10.6
        working-directory: ./core

      - name: Run tests -d mariadb -a mysqli -i 10.6 -c 2/4
        run: Build/Scripts/runTests.sh -s acceptance -p ${{ matrix.phpVersion }} -d mariadb -a mysqli -i 10.6
        working-directory: ./core

      - name: Run tests -d mariadb -a mysqli -i 10.6 -c 3/4
        run: Build/Scripts/runTests.sh -s acceptance -p ${{ matrix.phpVersion }} -d mariadb -a mysqli -i 10.6
        working-directory: ./core        

      - name: Run tests -d mariadb -a mysqli -i 10.6 -c 4/4
        run: Build/Scripts/runTests.sh -s acceptance -p ${{ matrix.phpVersion }} -d mariadb -a mysqli -i 10.6
        working-directory: ./core

      - name: Run tests -d mariadb -a mysqli -i 10.7 -c 1/4
        run: Build/Scripts/runTests.sh -s acceptance -p ${{ matrix.phpVersion }} -d mariadb -a mysqli -i 10.7
        working-directory: ./core

      - name: Run tests -d mariadb -a mysqli -i 10.7 -c 2/4
        run: Build/Scripts/runTests.sh -s acceptance -p ${{ matrix.phpVersion }} -d mariadb -a mysqli -i 10.7
        working-directory: ./core

      - name: Run tests -d mariadb -a mysqli -i 10.7 -c 3/4
        run: Build/Scripts/runTests.sh -s acceptance -p ${{ matrix.phpVersion }} -d mariadb -a mysqli -i 10.7
        working-directory: ./core        

      - name: Run tests -d mariadb -a mysqli -i 10.7 -c 4/4
        run: Build/Scripts/runTests.sh -s acceptance -p ${{ matrix.phpVersion }} -d mariadb -a mysqli -i 10.7
        working-directory: ./core            